diff --git a/src/http/modules/ngx_http_gzip_filter_module.c b/src/http/modules/ngx_http_gzip_filter_module.c
index ed0de60..8bc8f8d 100644
--- a/src/http/modules/ngx_http_gzip_filter_module.c
+++ b/src/http/modules/ngx_http_gzip_filter_module.c
@@ -25,8 +25,10 @@ typedef struct {
     size_t               wbits;
     size_t               memlevel;
     ssize_t              min_length;
+    ssize_t              max_length;
 
     ngx_array_t         *types_keys;
+    ngx_array_t         *bypass;
 } ngx_http_gzip_conf_t;
 
 
@@ -174,6 +176,20 @@ static ngx_command_t  ngx_http_gzip_filter_commands[] = {
       offsetof(ngx_http_gzip_conf_t, min_length),
       NULL },
 
+    { ngx_string("gzip_max_length"),
+      NGX_HTTP_MAIN_CONF|NGX_HTTP_SRV_CONF|NGX_HTTP_LOC_CONF|NGX_CONF_TAKE1,
+      ngx_conf_set_size_slot,
+      NGX_HTTP_LOC_CONF_OFFSET,
+      offsetof(ngx_http_gzip_conf_t, max_length),
+      NULL },
+
+    { ngx_string("gzip_bypass"),
+      NGX_HTTP_MAIN_CONF|NGX_HTTP_SRV_CONF|NGX_HTTP_LOC_CONF|NGX_CONF_1MORE,
+      ngx_http_set_predicate_slot,
+      NGX_HTTP_LOC_CONF_OFFSET,
+      offsetof(ngx_http_gzip_conf_t, bypass),
+      NULL },
+
       ngx_null_command
 };
 
@@ -233,13 +249,27 @@ ngx_http_gzip_header_filter(ngx_http_request_t *r)
         || (r->headers_out.content_encoding
             && r->headers_out.content_encoding->value.len)
         || (r->headers_out.content_length_n != -1
-            && r->headers_out.content_length_n < conf->min_length)
+            && (r->headers_out.content_length_n < conf->min_length
+                || (conf->max_length > 0
+                    && r->headers_out.content_length_n > conf->max_length)))
         || ngx_http_test_content_type(r, &conf->types) == NULL
         || r->header_only)
     {
         return ngx_http_next_header_filter(r);
     }
 
+    switch (ngx_http_test_predicates(r, conf->bypass)) {
+
+    case NGX_ERROR:
+        return NGX_ERROR;
+
+    case NGX_DECLINED:
+        return ngx_http_next_header_filter(r);
+
+    default: /* NGX_OK */
+        break;
+    }
+
     r->gzip_vary = 1;
 
 #if (NGX_HTTP_DEGRADATION)
@@ -1081,6 +1111,8 @@ ngx_http_gzip_create_conf(ngx_conf_t *cf)
     conf->wbits = NGX_CONF_UNSET_SIZE;
     conf->memlevel = NGX_CONF_UNSET_SIZE;
     conf->min_length = NGX_CONF_UNSET;
+    conf->max_length = NGX_CONF_UNSET;
+    conf->bypass = NGX_CONF_UNSET_PTR;
 
     return conf;
 }
@@ -1105,6 +1137,8 @@ ngx_http_gzip_merge_conf(ngx_conf_t *cf, void *parent, void *child)
     ngx_conf_merge_size_value(conf->memlevel, prev->memlevel,
                               MAX_MEM_LEVEL - 1);
     ngx_conf_merge_value(conf->min_length, prev->min_length, 20);
+    ngx_conf_merge_value(conf->max_length, prev->max_length, 0);
+    ngx_conf_merge_ptr_value(conf->bypass, prev->bypass, NULL);
 
     if (ngx_http_merge_types(cf, &conf->types_keys, &conf->types,
                              &prev->types_keys, &prev->types,
